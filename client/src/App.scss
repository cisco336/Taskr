@import url('index.css');

$breakpoints: (
    "phone":        400px,
    "phone-wide":   480px,
    "phablet":      560px,
    "tablet-small": 640px,
    "tablet":       768px,
    "tablet-wide":  1024px,
    "desktop":      1248px,
    "desktop-wide": 1440px
);
@mixin mq($width, $type: min) {
    @if map_has_key($breakpoints, $width) {
        $width: map_get($breakpoints, $width);
        @if $type == max {
            $width: $width - 1px;
        }
        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}

$mainGreen: #bbe428;
$deepPurple: #8b15a8;
$navGray: #343a40;
nav {
    border-bottom: 8px solid $mainGreen;
    overflow: hidden;
    position: relative;
    header {
        z-index: 1;
        position: relative;
    }
    .title-back {
        position: absolute;
        z-index: 0;
        top: -50%;
        padding: 0px;
        margin: 0px;
        color: rgba(0,0,0,.1);
        font-size: 10rem;
    }
}
button.newTask-button {
    cursor: pointer;
    border: none;
    border-radius: 100%;
    background-color: $deepPurple;
    color: white;
    width: 150px;
    height: 150px;
    position: absolute;
    top: -75px;
    right: -75px;
    padding: 50px 50px 0 0;
    font-size: 1.5em;
    z-index: 2;
    box-shadow: -8px 13px 10px -5px rgba(0,0,0,.3);
    transition: all .2s ease-out;
    & i {
        transition: all 1s ease-in-out;
        transform: rotate(0deg);
    }
    &:focus {
        outline: none !important;
    }
    &:hover {
        background-color: lighten($deepPurple, 10%);
        box-shadow: -8px 10px 5px -5px rgba(0,0,0,.5);
        & i {
            transform: rotate(1turn);
        }
    }
}
.task-results {
    padding: .5rem 0rem;
    width: 100%;
    div.row  {
        border-bottom: 1px solid rgba(0,0,0,.1);
        &:last-child {
            border-bottom: none;
        }
        padding: 0px 10px;
        margin: 0px;
        max-height: auto !important;
        div:nth-child(4), div:nth-child(3), div:last-child {
            text-align: right;
        }
        div:nth-child(4) i {
            cursor: pointer;
        }
        input {
            position: relative;
            margin: 0px;
            padding: 0px;
        }
    }
    div.row + div.row {
        background: lighten($navGray, 70%);
        color: #333;
        padding: 10px 10px; 
        margin: 0px;
        max-height: auto !important;
        div {
            padding: 0px;
            & p {
                margin: 0;
            }
        }
        div:last-child {
            text-align: right;
        }
    }
}
h3 {
    padding-left: 1rem;
    width: 100%;
    position: relative;

    button[data-target="#filters"]{
        border-radius: 100%;
        position: absolute;
        right: 10px;
        background-color: $mainGreen;
        color: white;
        box-shadow: inset 0 10px 20px -5px rgba(255,255,255,.5) , 0 10px 20px -5px rgba(0,0,0,.3);
        z-index: 10;
        transition: all .2s ease-out;
        &:hover {
            background: darken($mainGreen, 5%);
            box-shadow: inset 0 10px 20px -5px rgba(0,0,0,.2) ,0 10px 20px -5px rgba(0,0,0,.7);
        }
        & i {
            transform: rotate(0deg);
            transition: all .2s ease-in-out;
            &.active {
                transform: rotate(180deg);
            }
        }

        &:link {
            border: red;
            border: none !important;
            box-shadow: inset 0 -10px 20px -5px rgba(0,0,0,.2) ,0 10px 20px -5px rgba(0,0,0,.3);
        }
    }
}
h3 ~ hr {
    margin-bottom: 0px;
    padding: 0px;
}
#filters {
    padding: 1rem;
    color: #333;
    background: lighten($navGray, 70%);
    border-bottom: 4px solid $mainGreen;
    width: 100%;
    text-align: right;
    h4 + span button {
        margin-top: 1rem;
        &:nth-child(2) {
            margin-left: 10px;
            margin-right:10px;
        }
    }
    span + h4 {
        margin-top: 1.5rem;
    }
    button {
        width: 50px !important;
        box-shadow: 0 10px 20px -5px rgba(0,0,0,.4);
        transition: all .2s ease-in-out;
        &:hover {
            box-shadow: 0 10px 20px -5px rgba(0,0,0,.4);
        }
    }
    @include mq('phone-wide') {
        &.collapsing, &.show {
            display: grid;
            grid-template-areas: 'priority completed' 'priorityOp completedOp';
            #priority {
                grid-area: priority;
            }
            #completed {
                grid-area: completed;
            }
            #priorityOp {
                grid-area: priorityOp
            }
            #completedOp {
                grid-area: completedOp;
            }
            h4 {
                padding: 0px;
                margin: 0px;
                align-self: center;
            }

        }
    }
}
span + h1 {
    padding-left: 10px;
}